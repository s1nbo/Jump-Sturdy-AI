#ifndef MOVES_HPP
#define MOVES_HPP

#include "board.hpp"

#include <vector>
#include <cstdint>
#include <array>

class Moves {
public:
    Moves();

    bool gameOver(bitboard &board, std::vector<uint16_t> moves);

    std::vector<uint16_t> generateMoves(bitboard &board);

    std::vector<uint16_t> pawnMovesDiagonal(uint64_t start, uint64_t valid, bool turn);
    std::vector<uint16_t> pawnMoves(uint64_t start, uint64_t valid, bool turn);
    std::vector<uint16_t> knightMoves(uint64_t start, uint64_t blocked, bool turn, bool mixed);

    bitboard updateBoard(bitboard board, uint16_t move);

    
    // fill from bottom left to top right
    const std::array<std::array<uint16_t, 4>, 64> redKnightTable = 
    {{
        {17,10},{18,16,11},{19,17,12,8},{20,18,13,9},{21,19,14,10},{22,20,15,11},{23,21,12},{22,13},
        {25,18},{26,24,19},{27,25,20,16},{28,26,21,17},{29,27,22,18},{30,28,23,19},{31,29,20},{30,21},
        {33,26},{34,32,27},{35,33,28,24},{36,34,29,25},{37,35,30,26},{38,36,31,27},{39,37,28},{38,29},
        {41,34},{42,40,35},{43,41,36,32},{44,42,37,33},{45,43,38,34},{46,44,39,35},{47,45,36},{46,37},
        {49,42},{50,48,43},{51,49,44,40},{52,50,45,41},{53,51,46,42},{54,52,47,43},{55,53,44},{54,45},
        {57,50},{58,56,51},{59,57,52,48},{60,58,53,49},{61,59,54,50},{62,60,55,51},{63,61,52},{62,53},
        {58},{59},{60,56},{61,57},{62,58},{63,59},{60},{61},
        {},{},{},{},{},{},{},{}
    }};
    const std::array<std::array<uint16_t, 4>, 64> blueKnightTable = 
    {{
        {},{},{},{},{},{},{},{},
        {2},{3},{0,4},{1,5},{2,6},{3,7},{4},{5},
        {1,10},{0,2,11},{1,3,8,12},{2,4,9,13},{3,5,10,14},{4,6,11,15},{5,7,12},{6,13},
        {9,18},{8,10,19},{9,11,16,20},{10,12,17,21},{11,13,18,22},{12,14,19,23},{13,15,20},{14,21},
        {17,26},{16,18,27},{17,19,24,28},{18,20,25,29},{19,21,26,30},{20,22,27,31},{21,23,28},{22,29},
        {25,34},{24,26,35},{25,27,32,36},{26,28,33,37},{27,29,34,38},{28,30,35,39},{29,31,36},{30,37},
        {33,42},{32,34,43},{33,35,40,44},{34,36,41,45},{35,37,42,46},{36,38,43,47},{37,39,44},{38,45},
        {41,50},{40,42,51},{41,43,48,52},{42,44,49,53},{43,45,50,54},{44,46,51,55},{45,47,52},{46,53}
    }};
    const std::array<std::array<uint16_t, 3>, 64> redPawnTable =
    {{
        {},{2, 9},{1, 3, 10},{2, 4, 11},{3, 5, 12},{4, 6, 13},{5, 7, 14},{},
        {9, 16},{8, 10, 17},{9, 11, 18},{10, 12, 19},{11, 13, 20},{12, 14, 21},{13, 15, 22},{14, 23},
        {17, 24},{16, 18, 25},{17, 19, 26},{18, 20, 27},{19, 21, 28},{20, 22, 29},{21, 23, 30},{22, 31},
        {25, 32},{24, 26, 33},{25, 27, 34},{26, 28, 35},{27, 29, 36},{28, 30, 37},{29, 31, 38},{30, 39},
        {33, 40},{32, 34, 41},{33, 35, 42},{34, 36, 43},{35, 37, 44},{36, 38, 45},{37, 39, 46},{38, 47},
        {41, 48},{40, 42, 49},{41, 43, 50},{42, 44, 51},{43, 45, 52},{44, 46, 53},{45, 47, 54},{46, 55},
        {49, 56},{48, 50, 57},{49, 51, 58},{50, 52, 59},{51, 53, 60},{52, 54, 61},{53, 55, 62},{54, 63},
        {},{56, 58},{57, 59},{58, 60},{59, 61},{60, 62},{61, 63},{}
    }};
    const std::array<std::array<uint16_t, 3>, 64> bluePawnTable = 
    {{
        { 1 }, { 2, 0 }, { 3, 1 }, { 4, 2 }, { 5, 3 }, { 6, 4 }, { 7, 5 }, { 6 },
        { 0, 9 }, { 1, 10, 8 }, { 2, 11, 9 }, { 3, 12, 10 }, { 4, 13, 11 }, { 5, 14, 12 }, { 6, 15, 13 },{ 7, 14 },
        { 8, 17 }, { 9, 18, 16 }, { 10, 19, 17 }, { 11, 20, 18 }, { 12, 21, 19 }, { 13, 22, 20 }, { 14, 23, 21 },{ 15, 22 },
        { 16, 25 }, { 17, 26, 24 }, { 18, 27, 25 }, { 19, 28, 26 }, { 20, 29, 27 }, { 21, 30, 28 }, { 22, 31, 29 },{ 23, 30 },
        { 24, 33 }, { 25, 34, 32 }, { 26, 35, 33 }, { 27, 36, 34 }, { 28, 37, 35 }, { 29, 38, 36 }, { 30, 39, 37 },{ 31, 38 },
        { 32, 41 }, { 33, 42, 40 }, { 34, 43, 41 }, { 35, 44, 42 }, { 36, 45, 43 }, { 37, 46, 44 }, { 38, 47, 45 },{ 39, 46 },
        { 40, 49 }, { 41, 50, 48 }, { 42, 51, 49 }, { 43, 52, 50 }, { 44, 53, 51 }, { 45, 54, 52 }, { 46, 55, 53 },{ 47, 54 },
        { 48, 57 }, { 49, 58, 56 }, { 50, 59, 57 }, { 51, 60, 58 }, { 52, 61, 59 }, { 53, 62, 60 }, { 54, 63, 61 },{ 55, 62 }
    }};
    const std::array<std::array<uint16_t, 2>, 64> bluePawnDiagonalTable = 
    {{
        { }, { }, { }, { }, { }, { }, { }, { },
        { 1 }, { 2, 0 }, { 3, 1 }, { 4, 2 }, { 5, 3 }, { 6, 4 }, { 7, 5 },{ 6 },
        { 9 }, { 10, 8 }, { 11, 9 }, { 12, 10 }, { 13, 11 }, { 14, 12 }, { 15, 13 },{ 14 },
        { 17 }, { 18, 16 }, { 19, 17 }, { 20, 18 }, { 21, 19 }, { 22, 20 }, { 23, 21 },{ 22 },
        { 25 }, { 26, 24 }, { 27, 25 }, { 28, 26 }, { 29, 27 }, { 30, 28 }, { 31, 29 },{ 30 },
        { 33 }, { 34, 32 }, { 35, 33 }, { 36, 34 }, { 37, 35 }, { 38, 36 }, { 39, 37 },{ 38 },
        { 41 }, { 42, 40 }, { 43, 41 }, { 44, 42 }, { 45, 43 }, { 46, 44 }, { 47, 45 },{ 46 },
        { 49 }, { 50, 48 }, { 51, 49 }, { 52, 50 }, { 53, 51 }, { 54, 52 }, { 55, 53 },{ 54 }
    }};
    const std::array<std::array<uint16_t, 2>, 64> redPawnDiagonalTable = 
    {{
        { 9 }, { 8, 10 }, { 9, 11 }, { 10, 12 }, { 11, 13 }, { 12, 14 }, { 13, 15 },{ 14 },
        { 17 }, { 16, 18 }, { 17, 19 }, { 18, 20 }, { 19, 21 }, { 20, 22 }, { 21, 23 },{ 22 },
        { 25 }, { 24, 26 }, { 25, 27 }, { 26, 28 }, { 27, 29 }, { 28, 30 }, { 29, 31 },{ 30 },
        { 33 }, { 32, 34 }, { 33, 35 }, { 34, 36 }, { 35, 37 }, { 36, 38 }, { 37, 39 },{ 38 },
        { 41 }, { 40, 42 }, { 41, 43 }, { 42, 44 }, { 43, 45 }, { 44, 46 }, { 45, 47 },{ 46 },
        { 49 }, { 48, 50 }, { 49, 51 }, { 50, 52 }, { 51, 53 }, { 52, 54 }, { 53, 55 },{ 54 },
        { 57 }, { 56, 58 }, { 57, 59 }, { 58, 60 }, { 59, 61 }, { 60, 62 }, { 61, 63 },{ 62 },
        { }, { }, { }, { }, { }, { }, { }, { }
    }};

    // Helper
    std::vector<uint16_t> getBits(uint64_t board);
    uint16_t generateMove(uint16_t start, uint16_t end, uint16_t type);
    void printMoves(std::vector<uint16_t> moves);
    
};

#endif

